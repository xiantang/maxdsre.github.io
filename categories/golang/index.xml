<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Golang on xiantang - 自律者自由</title>
    <link>https://vim0.com/categories/golang/</link>
    <description>Recent content in Golang on xiantang - 自律者自由</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 24 Jan 2022 21:49:48 +0800</lastBuildDate><atom:link href="https://vim0.com/categories/golang/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Unix 如何杀死一个进程和它的子孙进程?</title>
      <link>https://vim0.com/post/kill_process_and_its_childs/</link>
      <pubDate>Mon, 24 Jan 2022 21:49:48 +0800</pubDate>
      
      <guid>https://vim0.com/post/kill_process_and_its_childs/</guid>
      <description>最近周末在维护一个开源项目，叫做 air。它是一个 Golang 的热加载代码的工具，会监听本地的文件变化，然后自动重新加载。 遇到的问题 最近遇到一个特别有意</description>
    </item>
    
    <item>
      <title>Golang: 让你的零值更有用</title>
      <link>https://vim0.com/post/make_zero_value_useful/</link>
      <pubDate>Sun, 16 Jan 2022 15:04:40 +0800</pubDate>
      
      <guid>https://vim0.com/post/make_zero_value_useful/</guid>
      <description>Make the zero value useful. &amp;ndash;Go Proverbs 让我们从 Golang blog 开始吧: The zero value 当内存被分配来存储一个值时，无论是通过声明还是调用 make 或 new ，并且没有提供明确的初始化，内存被赋予一个默</description>
    </item>
    
    <item>
      <title>使用 Mock 和 Interface 进行 Golang 单测</title>
      <link>https://vim0.com/post/golang/use_mock_to_test/</link>
      <pubDate>Fri, 07 Jan 2022 01:37:56 +0800</pubDate>
      
      <guid>https://vim0.com/post/golang/use_mock_to_test/</guid>
      <description>在工作中我经常会发现很多工程师的 Golang 单测是写的有问题的，只是单纯的调用代码做输出，并且会包含各种 IO 操作，导致单测无法到处运行。 使用 Mock 和 Interface 进行 Golang</description>
    </item>
    
    <item>
      <title>关于 Golang Slice 的一些细节</title>
      <link>https://vim0.com/post/golang/about_slice/</link>
      <pubDate>Tue, 21 Dec 2021 01:37:56 +0800</pubDate>
      
      <guid>https://vim0.com/post/golang/about_slice/</guid>
      <description>关于 Golang Slice 的一些细节 在 Golang 中，有两种数据类型： 一种是限定长度的数组，叫做 Array，另外一种是不限定长度的数组，叫做 Slice。 区分 Array 和 Slice Array 和 Slice</description>
    </item>
    
  </channel>
</rss>
